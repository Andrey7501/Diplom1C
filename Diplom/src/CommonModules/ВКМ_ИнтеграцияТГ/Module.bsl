
#Область СлужебныеПроцедурыИФункции

Процедура ОтправитьСообщениеТелеграмБоту() Экспорт
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ИдентификаторГруппыДляОповещения.Значение КАК ИдентификаторГруппы,
		|	ВКМ_ТокенУпрТелБотом.Значение КАК ТокенБота,
		|	ВКМ_УведомленияТелеграмБоту.Ссылка КАК Ссылка,
		|	ВКМ_УведомленияТелеграмБоту.ТекстСообщения КАК ТекстСообщения
		|ИЗ
		|	Константа.ВКМ_ТокенУпрТелБотом КАК ВКМ_ТокенУпрТелБотом,
		|	Константа.ВКМ_ИдентификаторГруппыДляОповещения КАК ВКМ_ИдентификаторГруппыДляОповещения,
		|	Справочник.ВКМ_УведомленияТелеграмБоту КАК ВКМ_УведомленияТелеграмБоту
		|ГДЕ
		|	НЕ ВКМ_УведомленияТелеграмБоту.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", ТипКонтентаJSON());
	
	Пока Выборка.Следующий() Цикл
		АдресРесурса = "/bot" + Выборка.ТокенБота + "/sendMessage";
		
		ДанныеСообщения = Новый Структура;
		ДанныеСообщения.Вставить("chat_id", Выборка.ИдентификаторГруппы);
		ДанныеСообщения.Вставить("text", Выборка.ТекстСообщения);
		
		КодСостояния = ВыполнитьHTTPЗапрос("POST", АдресРесурса, СтрокаJSON(ДанныеСообщения), Заголовки);
		
		Если КодСостояния = 200 Тогда
			ЭлементСправочника = Выборка.Ссылка.ПолучитьОбъект();
			ЭлементСправочника.Удалить();
		КонецЕсли;
		
	КонецЦикла;
 
КонецПроцедуры

Функция ВыполнитьHTTPЗапрос(ИмяМетода, АдресРесурса, СтрокаJSON, Заголовки) Экспорт
	
	СерверИсточник = ТелеграмAPI();
	
	Попытка
		Соединение = Новый HTTPСоединение(СерверИсточник, 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	Исключение
		ЗаписьЖурналаРегистрации("Не удалось подключиться к серверу: " + СерверИсточник, УровеньЖурналаРегистрации.Ошибка,,, 
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	HTTPЗапрос = Новый HTTPЗапрос(АдресРесурса, Заголовки);
	
	Если ИмяМетода <> "DELETE" И ИмяМетода <> "GET" Тогда
		HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаJSON);
	КонецЕсли;
	
	Попытка
		HTTPОтвет = Соединение.ВызватьHTTPМетод(ИмяМетода, HTTPЗапрос);
	Исключение
		ЗаписьЖурналаРегистрации("Ошибка выполнения запроса", УровеньЖурналаРегистрации.Ошибка,,,
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
			
	КодСостояния = HTTPОтвет.КодСостояния;
	
	Если КодСостояния <> 200 Тогда
		ДанныеОбОшибке = ОбъектJSON(HTTPОтвет.ПолучитьТелоКакСтроку());
		КодОшибки = СтрШаблон("Код ошибки: %1", ДанныеОбОшибке.error_code);
		ЗаписьЖурналаРегистрации(КодОшибки, УровеньЖурналаРегистрации.Ошибка,,, ДанныеОбОшибке.description);
	КонецЕсли;
		
	Возврат КодСостояния;
	
КонецФункции

Функция ТелеграмAPI() Экспорт
	
	Возврат "api.telegram.org";
	
КонецФункции

Функция ТипКонтентаJSON() Экспорт
	
	Возврат "application/json";
	
КонецФункции

Функция СтрокаJSON(Объект) Экспорт
	
	Запись = Новый ЗаписьJSON;
	Запись.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
	ЗаписатьJSON(Запись, Объект);
	Строка = Запись.Закрыть();
	
	Возврат Строка;
	
КонецФункции

Функция ОбъектJSON(СтрокаJSON) Экспорт
	
	Чтение = Новый ЧтениеJSON;
	Чтение.УстановитьСтроку(СтрокаJSON);
	Объект = ПрочитатьJSON(Чтение);
	Чтение.Закрыть();
	
	Возврат Объект;
	
КонецФункции

#КонецОбласти