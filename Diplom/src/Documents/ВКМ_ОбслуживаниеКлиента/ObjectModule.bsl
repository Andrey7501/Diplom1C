

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

 Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	 
	 Если НЕ ЗначениеЗаполнено(Константы.ВКМ_НоменклатураРаботыСпециалиста.Получить()) Тогда
		 Отказ = Истина;
		 ОбщегоНазначения.СообщитьПользователю("Не заполнена константа НоменклатураРаботыСпециалиста");
		 Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Константы.ВКМ_НоменклатураАбонентскаяПлата.Получить()) Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Не заполнена константа НоменклатураАбонентскаяПлата");
		Возврат;
	КонецЕсли;
	
	РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор, "ВидДоговора, ВКМ_Дата, ВКМ_СрокДействия, ВКМ_СтоимостьЧасаРаботы");
	
	Если РеквизитыДоговора.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Договор не является договором на Абонентское обслуживание. Необходимо выбрать другой договор или изменить Вид договора на Абонентское обслуживание");
		Возврат;
	КонецЕСли;
	
	Если РеквизитыДоговора.ВКМ_Дата > Дата ИЛИ РеквизитыДоговора.ВКМ_СрокДействия < Дата Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю("Дата документа не совпадает с периодом действия договора. Укажите актуальную дату");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, Сотрудник = &Сотрудник) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	
	Выборка = Запрос.Выполнить();
	
	//Если Выборка.Пустой() Тогда
	//	Отказ = Истина;
	//	ОбщегоНазначения.СообщитьПользователю("Не заполнены УсловияОплатыСотрудников");
	//	Возврат;
	//КонецЕсли;
	
	РезультатЗапроса = Выборка.Выбрать();
	Пока РезультатЗапроса.Следующий() Цикл
		УсловияОплатыСотрудников = РезультатЗапроса.ПроцентОтРабот;
	КонецЦикла;
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	
	Для Каждого ТекСтрВыполненныеРаботы ИЗ ВыполненныеРаботы Цикл
		СтоимостьЧасаРаботыСпециалиста = РеквизитыДоговора.ВКМ_СтоимостьЧасаРаботы;
		
		//движения по регистру ВКМ_ВыполненныеКлиентуРаботы
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		//Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = ТекСтрВыполненныеРаботы.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = СтоимостьЧасаРаботыСпециалиста * ТекСтрВыполненныеРаботы.ЧасыКОплатеКлиенту;
		
		//движения по регистру ВКМ_ВыполненныеСотрудникомРаботы
        Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		//Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Сотрудник = Специалист;
		Движение.ЧасовКОплате = ТекСтрВыполненныеРаботы.ЧасыКОплатеКлиенту;
		Движение.СуммаКОплате = СтоимостьЧасаРаботыСпециалиста * УсловияОплатыСотрудников * ТекСтрВыполненныеРаботы.ЧасыКОплатеКлиенту / 100;
	КонецЦикла;	

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПроверкаУсловийОплатыСотрудников(ДатаДокумента, Сотрудник) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Оклад,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот КАК ПроцентОтРабот
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, Сотрудник = &Сотрудник) 
		|		КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних";
	
	Запрос.УстановитьПараметр("Период", ДатаДокумента);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	УсловияОплаты = Новый Структура;
	УсловияОплаты.Вставить("ЗаписьСуществует", Ложь);
	
	Пока Выборка.Следующий() Цикл
		
		УсловияОплаты.Вставить("ЗаписьСуществует", Истина);
		УсловияОплаты.Вставить("ПроцентОтРабот", Выборка.ПроцентОтРабот);
	КонецЦикла;
	
	Возврат УсловияОплаты;
	
КонецФункции

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДляУведомления = Новый Структура("НовыйДокумент, Дата, Время, Специалист");
	
	Если НЕ ЭтоНовый() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист,
		|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРаботы КАК НачалоРаботы,
		|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРабот КАК ОкончаниеРаботы,
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК ДатаПроведенияРабот
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			ДатаДокумента = Выборка.ДатаПроведенияРабот;
			ВремяНачалоДокумента = Выборка.НачалоРаботы;
			ВремяКонецДокумента = Выборка.ОкончаниеРаботы;
			СпециалистДок = Выборка.Специалист;
		КонецЕсли;
		
		ДанныеДляУведомления.НовыйДокумент = "Документ уже существует";
		
	Иначе
		
		ДанныеДляУведомления.НовыйДокумент = "Новый документ";
	КонецЕсли;
		
	Если ДатаДокумента <> ДатаПроведенияРабот Тогда
		ДанныеДляУведомления.Дата = "Дата изменена";
	Иначе
		ДанныеДляУведомления.Дата = "Дата не изменена";
	КонецЕсли;
	
	Если СпециалистДок <> Специалист Тогда
		ДанныеДляУведомления.Специалист = "Специалист изменен";
	Иначе
		ДанныеДляУведомления.Специалист = "Специалист не изменен";
	КонецЕсли;
	
	СозданиеУведомления(ДанныеДляУведомления);
КонецПроцедуры 

Функция СозданиеУведомления(ДанныеДляУведомления) Экспорт
	
	СправочникУведомлений = Справочники.ВКМ_УведомленияТелеграмБоту;
	НовоеУведомление = СправочникУведомлений.СоздатьЭлемент();
	ТекстУведомления = СтрШаблон("В документ ""Обслуживание клиента"" № %1 от %2 были внесены изменения!", Номер, Дата);
	
	Если ДанныеДляУведомления.НовыйДокумент = "НовыйДокумент" Тогда
		ТекстУведомления = СтрШаблон("Создан новый документ ""Обслуживание клиента"" № %1 от %2.", Номер, Дата);
	КонецЕсли;
	
	Если ДанныеДляУведомления.Дата = "Дата изменена" Тогда
		ТекстУведомления = ТекстУведомления + "Изменено поле ""Дата"".";
	КонецЕсли;
	
	Если ДанныеДляУведомления.Время = "Время изменено" Тогда
		ТекстУведомления = ТекстУведомления + "Изменено поле ""Время работ"".";
	КонецЕсли;
	
	Если ДанныеДляУведомления.Специалист = "Специалист изменен" Тогда
		ТекстУведомления = ТекстУведомления + "Изменено поле ""Специалист"".";
	КонецЕсли;
	
	НовоеУведомление.ТекстСообщения = ТекстУведомления;
	
	Попытка
		НовоеУведомление.Записать();
		Возврат 1;
	Исключение
		Возврат 0;
	КонецПопытки;
	
КонецФункции

#КонецОбласти

#КонецЕсли


